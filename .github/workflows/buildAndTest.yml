
on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      os:
        type: string
        required: true
      cc:
        type: string
        required: true
      cxx:
        type: string
        required: true
      build-type:
        type: string
        required: true
      coverage: 
        type: string
        required: true
env:
  build_dir: "${{ github.workspace }}/build"
  # build_dir: "builds/${{ inputs.name }}-${{ inputs.build-type }}-${{ github.head_ref }}"

jobs:

  BuildAndTest:
    runs-on: ${{ inputs.os }}
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - uses: actions/cache@v4
      with:
        path: |
          ${{ env.build_dir }}/*
          !${{ env.build_dir }}/stats
        # key: ${{ runner.os }}-${{ runner.arch }}-${{ github.head_ref }}
        key: ${{ inputs.name }}-${{ github.head_ref }}

    - name: Restore stats
      run: mkdir -p ${{ env.build_dir }} && git clone --branch gh-stats https://github.com/hiergaut/hub.git ${{ env.build_dir }}/stats
      # && rm -fr ${{ env.build_dir }}/stats

    - name: Install lcov
      if: inputs.coverage == 'ON'
      run: sudo apt install lcov

    - name: Configure CMake
      run: cmake -B ${{ env.build_dir }} -DCMAKE_C_COMPILER=${{ inputs.cc }}
            -DCMAKE_CXX_COMPILER=${{ inputs.cxx }} -DCMAKE_BUILD_TYPE=${{ inputs.build-type }}
            -DCMAKE_INSTALL_PREFIX="install" -DHUB_ENABLE_TESTS=ON
            -DHUB_ENABLE_COVERAGE=${{ inputs.coverage }}

    - name: Build
      run: cmake --build ${{ env.build_dir }} --config ${{ inputs.build-type }}

    - name: Install
      run: cmake --install ${{ env.build_dir }} --config ${{ inputs.build-type }}

    - name: Test
      if: inputs.coverage == 'OFF'
      # run: cmake --build ${{ env.build_dir }} --target hub-tests-bin
      run: cmake --build ${{ env.build_dir }} --target hub-tests
      timeout-minutes: 10

    - name: Build coverage
      if: inputs.coverage == 'ON'
      run: cmake --build ${{ env.build_dir }} --target hub-coverage
      timeout-minutes: 10

      # Check coverage decline with save stats on gh-stats branch (main coverages)
    - name: Check coverage decline
      if: inputs.coverage == 'ON'
      run: cmake --build ${{ env.build_dir }} --target hub-coverage-checkDecline

      # Save coverage stats only when pushing on main
    - name: Save coverage stats
      if: inputs.coverage == 'ON' && github.event_name == 'push'
      run: cmake --build ${{ env.build_dir }} --target hub-coverage-saveStats

    - name: Save stats
      # if: github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ env.build_dir }}/stats
        publish_branch: gh-stats
        keep_files: true

      # if: github.event_name == 'push'
      # uses: JamesIves/github-pages-deploy-action@v4
      # with:
      #   folder: ${{ env.build_dir }}/stats # The folder the action should deploy.
      #   clean: true
      #   single-commit: true
      #   branch: gh-stats
